/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jersey.tutorial;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Optional;

public class Library {
	
	public static void main(String[] args) {
		compress(null)
			.orElseGet(() -> "Nothing Is Here");
		
		compress(new int[] {1,1,1,1,1,1,3,3,3,3,4,3,3,2,3,2,2,2,1,2,3,2,2,2,3,2,2,2,2,2,2,2,2,2,3,3,3,3,4,5,4,3,4,4,4,4})
			.ifPresent(result -> System.out.println("result = "+result));
		
		someLibraryMethod();
	}
	
    public static boolean someLibraryMethod() {
    	
    	
//    	InputStream in = null;
//    	OutputStream out = null;
    	try (InputStream in = new FileInputStream("tmp.txt")) {
			
			try (OutputStream out = new FileOutputStream("out.txt")) {
				char data = 0;
				while((data = (char)in.read()) > 0) {
					if(Character.isDigit(data)) {
						out.write(data);
					}
					// System.out.print(data);
				}
			}
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
    	System.out.println(" end of file ");
        return true;
    }
    
    public static Optional<String> compress(int[] array) {
    	StringBuilder result = new StringBuilder();
    	if (array == null) {
    		return Optional.empty();
    	}
    	int count = 0;
    	for(int i = 0; i < array.length; i++) {
    		if (count == 0) {
    			result.append(array[i]);
    		}
    		count++;
    		if (((i < array.length - 1) && (array[i] != array[i+1]))
    				|| i >= array.length - 1) {
    				result.append("x").append(count).append(",");
    				count = 0;
    		}
    	}
    	System.out.println("result = "+result);
    	return Optional.of(result.toString());
    }
}
